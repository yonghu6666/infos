Question
  2.内网环境，nginx配置服务器域名
    使用nginx，给nodejs启动的服务器，配置域名。

  1.内网环境，app能否访问绑定未认证的ssl证书的https请求。

WORK
  5.
  4.RN开发的APP大厅，添加广告UI的弹窗 1

  3.WebView页面，左侧添加其他游戏入口,用RN实现。

  2.加上大厅支持横竖的布局；
    优先h5lobby，后续抽时间修改app版本。
  1.继续先改其他几个新框架下的Slots；

优化
  1.H5LOBBY
    1.1 wss服务
      websocket的加密协议：wss。
      网页版接入FB登录时，要求接入登录的
    1.2 webpack打包

    1.3 bable
      将es6语法转换为es5语法

  2.shell app
    2.1 是否需要接入Google Play SDK 
    2.2 打开app，卡住界面，显示0%
    2.3 webserver更新图片后，app加载时，获取到的仍是更新前的图片，而不是更新的图片



-------------------------------------
2020/05/29 18:21:26
今日工作
  1.完成大厅操作功能：滑动时增加目录的动画。
  2.修改用户被踢出时的bug。

-------------------------------------
2020/05/28 09:53:11
今日工作
  1.添加进入游戏前的loading功能、修改大厅余额显示布局
  2.修改服务器维护时，客户端显示的bug
  3.研究多语言方案中图片的处理

大厅国际化方案分析
  文本的多语言，目前有一套可行的方案，可在不刷新页面的情况下，进行多语言切换。
  1.刷新方案
    在UI层提供多个语言版本的图片资源，用户主动切换语言时，刷新页面之后切换到对应的语言版本。
  2.不刷新方案
    

-------------------------------------
2020/05/27 09:31:04
今日工作
  1.解决部分手机浏览器打不开大厅的问题。
  2.解决进入大厅前显示的黑框问题。

今日工作（5.26）
  1.WebLobby与平台服务器对接
    解决跨域问题：在阿里云服务器配置跨域白名单。

-------------------------------------
2020/05/25 22:02:06
今日工作
  1.WebLobby与平台服务器对接

本周计划
  1.完成WebLobby的对接
  2.完成Unity Lobby的单游戏大厅
-------------------------------------
2020/05/22 08:46:10
今日工作
  1.修改WebLobby的平台服务器的对接相关的代码

-------------------------------------
2020/05/21 08:46:10
Unity APP的开发工作暂停了，改为与海尖对接Web Lobby的新增功能。这可能会导致Unity APP的完成时间延迟。
今日工作
  1.修改WebLobby的用户登录接口代码。
  2.完成WebLobby的平台服务器的消息推包业务。
    推送消息：AC、Kick、HD、GD。


-------------------------------------
今日工作
  1.完成部分单个游戏展示页面的编码
  2.打包发现手机上不能正常运行protobuf-net的问题
  3.与海尖对接web lobby

Microsoft.CSharp.dll路径
D:\Develop\Unity\2018.4.21f1\Editor\Data\MonoBleedingEdge\lib\mono\4.7.1-api\Microsoft.CSharp.dll
-------------------------------------
今日工作
  1.完成多游戏大厅合集页面

-------------------------------------
2020/05/18 09:32:21
今日工作（5.18）
  1.完成多游戏大厅的banner区域、左侧入口功能

本周任务
  1.完成多游戏大厅的合集页面
  2.完成单游戏大厅的主游戏页面

-------------------------------------
2020/05/15 18:36:02
今日工作
  1.制作部分合集页面的预设
  2.完成心跳功能的编码

-------------------------------------
2020/05/14 19:15:54
今日工作
  1.完成websocket模块
    


-------------------------------------
2020/05/13 18:50:06
今日工作
  1.确定处理Websocket的protobuf的方式
    直接使用服务端的类库时，发现与Unity不兼容。改为使用protobufNet库。

-------------------------------------
2020/05/12 19:17:54
今日工作
  1.编写Websocket代码
    遇到从服务端下发protobuf协议时，解析协议的问题

-------------------------------------
2020/05/11 09:42:22
今日工作
  1.完成用户登录大厅功能
    仅游客登陆，不包括FB登录。

本周计划
  1.完成websocket请求功能
  2.完成登录页面、部分大厅页面

-------------------------------------
2020/05/09 09:31:27
今日工作
  1.完善工具类
    增加多语言中文本可携带参数、解压资源等功能
  2.完成单游戏大厅的主游戏更新的代码

-------------------------------------
2020/05/08 18:39:13
今日工作
  1.编写部分单游戏大厅的主游戏更新的代码。
  
-------------------------------------
2020/05/07 09:50:04
今日工作
  1.完成部分下载功能。
  2.解决打包时获取手机ID报错的问题。
  3.解决打出的包闪退的问题。
    报错内容：java.lang.ClassNotFoundException: Didn't find class "com.unity3d.player.UnityPlayerNativeActivity"
    修改AndroidMainifest中的com.unity3d.player.UnityPlayerNativeActivity，改为com.unity3d.player.UnityPlayerActivity


-------------------------------------
2020/05/06 10:17:26
今日工作
  1.实现自定义事件系统。

本周计划
  1.继续开发Unity版本的大厅app



-------------------------------------
2020/04/30 11:32:33
今日工作
  1.实现Unity的全局异常处理功能。
  2.编写HallData、GameData、CateData，保存大厅数据。


-------------------------------------
2020/04/29 11:11:40
今日工作
  1.研究Unity是否支持.NET standard 2.0，以引入对应的Newtonsoft.JSON库。
    Unity支持.NET standard 2.0，引入Newtonsoft.JSON库的netstand2。0的库。
  2.完善工具类、通信类
  3.编写错误码，大厅数据获取类


-------------------------------------
2020/04/28 18:47:19
今日工作
  1.生成FarkleMania的GooglePlay版本的密钥，并重新打包。
  2.编写工具类、http通信类，编写平台token检验代码。
-------------------------------------
2020/04/27 10:28:38
今日工作
  1.添加多语言插件

本周计划
  开发Unity版本的app
-------------------------------------
2020/04/26 11:39:40
今日工作
  1.创建项目，导入UniWebView、FairyGUI插件。
  2.创建登录页面的预设。

本周计划


-------------------------------------
2020/04/24 17:36:28
今日工作
  1.确定UnityEditor的版本
    Unity2018.4.21f
  2.确定UniWebView的版本
    UniWebView3.9.1
  3.确定UI框架
    项目同时提供对UGUI和FairyGUI的支持。
    在界面开发时，可根据自己的需要，选择对应的UI框架。

接入Unity大厅项目的h5游戏，目前存在这个情况：
  由于UniWebView在h5页面加载的js/css等资源加载完之前，不能发消息给C#，所以要求h5游戏在未获取到服务器的任何数据之前，能够完整的执行完js的逻辑，即js代码不报错。同时，需要支持在js逻辑执行完之后，如果收到从C#发过来的数据，能够将数据完整的填充到游戏中。
在开发新的h5游戏时，可以在考虑上述情况下进行开发。

-------------------------------------
2020/04/23 13:43:57
今日工作
  1.查找在UniWebView的指定区域，显示Unity的对象方法。要求指定区域之外的UniWevView页面不受任何影响。
    未找到实现方法。
  
使用Unity开发APP大厅的结论：
  可以开发，存在一些限制。
  1.WebSocket
    使用C#自带的WebSocket进行开发。
  2.使用UniWebView显示h5游戏
    目前在游戏中，在不重新渲染游戏界面的情况下，打开Unity界面的方式，只能是隐藏UniWebView，将Unity界面设置为可见。例如隐藏h5游戏界面，显示Unity的活动页面。
    不支持在UniWebView的指定区域，显示Unity的对象。例如将游戏中的活动这个公共入口，由Unity实现，并放到游戏界面的某个位置。原因：UniWevView会遮挡住自己尺寸范围下的Unity的UI元素、3D对象、粒子动画。
    小飞机使用的是UniWebView2，官方说法是UniWebView3对UniWebView2做了优化（特别是ios平台），建议使用UniWebView3。
  3.Unity与UniWebView通信
    3.1 C#发消息给UniWebView
    通过以下方法执行js代码：
      UniWebView.AddJavaScript(jsCodeString, callback);
      jsCodeString，需要执行的js代码；
      callback，js执行结束的回调。
    3.2 UniWebView发消息给C#
      通过URL方式发送消息，即window.location.href = ...;
      限制：
          在入口页面加载完所有的资源（js、css等）之前，不能执行语句window.location.href，否则UniWebView会跳转至'uniwebview://game-over'，而非发消息给C#。
          URL的长度不能超过16KB。


    1.资源放到目录
      D:\workspace\BeiDouYiXianH5\ShellApp\BDYXGames\android\app\src\main\assets
    2.通过API读取到这个资源，拷贝到一个可读写目录
      读取资源API
      _context.getAssets().open(“appBundle.mp3”)
      可读写目录
        getExternalFilesDir(AppConsts.getInstance().getEmptyString()).getPath()
    3.从可读写目录读取资源
      getExternalFilesDir(AppConsts.getInstance().getEmptyString()).getPath()
-------------------------------------
2020/04/22 09:59:46
今日工作
  1.实现Unity中不关闭UniWebView的情况下，显示Unity对象的demo。
    （
    此demo已确认，在不关闭UniWebView的情况下，打开Unity的某个页面（如任务界面），是可行的。
    实现方式：隐藏UniWebView，显示Unity页面。
    ）


-------------------------------------
2020/04/21 16:03:00
今日工作
  1.在APP中打包一份RN资源、Farkle资源。
  2.打包Farkle App。

-------------------------------------
2020/04/20 10:16:19
今日工作
  1.app接入穿山甲广告
  2.测试Farkle接入app是否存在问题
gameclient.mainCtrl.request('PlayerPurchase'
广告得金币，购买都用这个
1.穿山甲创建应用
  修改TTAdManagerHolder.buildConfig
  appId("5061147")
  appName("塔防消消乐")

2.

project build.gradle
classpath 'com.android.tools.build:gradle:3.3.1'
gradle-wrapper.properties
distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-all.zip

本周计划
  1.完成farkle的app版本，包括穿山甲广告接入、farkle app的farkle游戏接入、打包出farkle app。
  2.完成uniwebview的三个功能验证。
-------------------------------------
2020/04/18 14:29:55
完成验证
  a.Unity里C#与UniWebView通信
  b.加载本地资源
-------------------------------------
2020/04/17 09:32:56
今日工作
  1.完成验证以下两个功能的demo
    a.Unity里C#与UniWebView通信
    b.加载本地资源
    由于小飞机版本的app进不去游戏，未能验证上述两个功能。



Unity里C#与UniWebView通信
加载本地资源是否正常
能否在UniWebView上叠加界面或组件

-------------------------------------
2020/04/16 18:39:04
今日工作
  研究Unity开发APP的可行性，整理如下：
    1.WebView的实现
    小飞机项目，使用的是AssetStore插件UniWebView，这里优先考虑使用该插件。
    目前已知的一些问题：
      a.开发期间的调试
        在开发期间，如何调试WebView上跑的游戏。
        插件提供的方案：支持在mac的Editor上直接调试，android的调试需要打包，在android机器上运行时调试。
        一般Unity的开发期间的调试，都是在Editor上进行，可以很大提高开发调试的效率。
      b.加载本地资源是否正常
        需要demo验证。
      c.能否在WebView上叠加界面
        即在Unity中实现的组件，叠加到WebView上的时候，会不会存在问题。（主要是考虑会不会拦截事件。）
        需要demo验证。
    2.Unity中使用websocket
      可以使用.netcore的ClientWebSocket，编写网络模块。不必从Asset Store 中购买Best HTTP/2。
    3.Unity通过网络加载资源的限制  
      使用Unity官方API：UnityWebRequest，未发现该API对下载的资源格式的限制。
    4.Unity里C#与WebView通信  
      需要继续研究UniWebView接受Unity消息的方法。

-------------------------------------
2020/04/15 10:37:13
今日工作
  1.将SingleGamePage.js、MultiGamePage.js中的广告功能、WebView功能，拆分出来，做成单独的组件。


-------------------------------------
2020/04/14 09:39:39
今日工作
  1.在RN中实现可全局调用的广告UI的弹窗。



-------------------------------------
2020/04/13 10:31:45
今日工作：
  1.打包多游戏大厅app。
  2.确定广告UI的弹出方式。
  3.接入炼金老虎机。

1.getOtherEntryArr()
  这个接口是获取其他游戏/合集的入口数据的。
  不同的游戏，获取其他入口之后，由于需要展示的入口方式不同，需要有不同的代码。
  SLOT不需要展示其他的入口，所以在获取到数据之后，没有添加处理UI逻辑的代码。
2.enterEntry()
  这个接口是进入其他游戏/合集页面的。
  SLOT不需要展示其他的入口，所以不需要调用该接口。


本周计划：
  1.完结单游戏大厅APP、多游戏大厅APP、h5lobby大厅的工作。
  2.选择合适的UI框架，开发toB的后台PC前端。

1.删除游戏中的PC相关的资源，以减小压缩包的大小；
2.需要把库文件，放到我们自己的CDN上；
3.在成功接入游戏后，需要把游戏换成发布版本。

-------------------------------------
2020/04/10 17:41:01
今日工作
  1.合并游戏接入APP/h5lobby的部分接口


统一游戏接入APP/h5lobby的接口遇到的问题：
  1.游戏更新信息接口
    APP版本会注册一个游戏更新信息事件，并且在游戏页面显示下载游戏进度、检查更新信息，h5lobby则不需要。
    这个接口要求游戏侧做不同的处理。
  2.获取用户数据接口
    APP中获取用户数据是异步的，所以需要额外注册一个事件来获取；而h5lobby直接调同步接口即可。
    这个接口要求游戏侧做不同的处理。
  3.通知APP/h5lobby游戏的当前进度接口
    游戏需要在游戏渲染结束后通知APP，而h5lobby则需要在刚执行游戏逻辑时通知。
    这个接口要求游戏侧做不同的处理。
  4.播放广告接口
    APP目前是播放的GA广告，h5lobby目前暂未介入广告。
    这个接口不清楚能否统一。
目前游戏接入APP的接口有8个，接口h5lobby的接口是5个。只有其中4个接口可以统一。


-------------------------------------
2020/04/11 18:18:11
打包了一个多游戏大厅的app的debug版本，游戏只接入了德州老虎机，其他游戏暂未接入。
目前是用的内网服务器地址（图片资源服务器用的我本机上的服务器、RN/游戏资源服务器用的是内网测试机的服务器）。

-------------------------------------
2020/04/09 10:28:41
今日工作
  1.完成游戏接入APP的部分接口。


RN提供给游戏的数据
  游戏更新信息

-------------------------------------
2020/04/08 10:08:54
今日工作
  1.完成app多游戏大厅的代码编写。



-------------------------------------
=======
2020/04/14 09:39:39
今日工作
  1.在RN中实现可全局调用的广告UI的弹窗。



-------------------------------------
2020/04/13 10:31:45
今日工作：
  1.打包多游戏大厅app。
  2.确定广告UI的弹出方式。
  3.接入炼金老虎机。

1.getOtherEntryArr()
  这个接口是获取其他游戏/合集的入口数据的。
  不同的游戏，获取其他入口之后，由于需要展示的入口方式不同，需要有不同的代码。
  SLOT不需要展示其他的入口，所以在获取到数据之后，没有添加处理UI逻辑的代码。
2.enterEntry()
  这个接口是进入其他游戏/合集页面的。
  SLOT不需要展示其他的入口，所以不需要调用该接口。


本周计划：
  1.完结单游戏大厅APP、多游戏大厅APP、h5lobby大厅的工作。
  2.选择合适的UI框架，开发toB的后台PC前端。

1.删除游戏中的PC相关的资源，以减小压缩包的大小；
2.需要把库文件，放到我们自己的CDN上；
3.在成功接入游戏后，需要把游戏换成发布版本。

-------------------------------------
2020/04/10 17:41:01
今日工作
  1.合并游戏接入APP/h5lobby的部分接口


统一游戏接入APP/h5lobby的接口遇到的问题：
  1.游戏更新信息接口
    APP版本会注册一个游戏更新信息事件，并且在游戏页面显示下载游戏进度、检查更新信息，h5lobby则不需要。
    这个接口要求游戏侧做不同的处理。
  2.获取用户数据接口
    APP中获取用户数据是异步的，所以需要额外注册一个事件来获取；而h5lobby直接调同步接口即可。
    这个接口要求游戏侧做不同的处理。
  3.通知APP/h5lobby游戏的当前进度接口
    游戏需要在游戏渲染结束后通知APP，而h5lobby则需要在刚执行游戏逻辑时通知。
    这个接口要求游戏侧做不同的处理。
  4.播放广告接口
    APP目前是播放的GA广告，h5lobby目前暂未介入广告。
    这个接口不清楚能否统一。
目前游戏接入APP的接口有8个，接口h5lobby的接口是5个。只有其中4个接口可以统一。


-------------------------------------
2020/04/11 18:18:11
打包了一个多游戏大厅的app的debug版本，游戏只接入了德州老虎机，其他游戏暂未接入。
目前是用的内网服务器地址（图片资源服务器用的我本机上的服务器、RN/游戏资源服务器用的是内网测试机的服务器）。

-------------------------------------
2020/04/09 10:28:41
今日工作
  1.完成游戏接入APP的部分接口。


RN提供给游戏的数据
  游戏更新信息

-------------------------------------
2020/04/08 10:08:54
今日工作
  1.完成app多游戏大厅的代码编写。



-------------------------------------

2020/04/07 09:25:32
今日工作（4.7）
  1.完成MultiGameAreaNoCate.js、MultiGameAreaWithCate.js等的代码编写。

本周工作
  1.完成APP的开发。
  2.完成游戏接口统一。



-------------------------------------
2020/04/03 09:50:32
今日工作
  1.完成LobbyPing.js、LobbyAvatar.js等的编写，修改MultiGamePageHeader.js等的修改。
  
-------------------------------------
2020/04/02 11:06:34
今日工作
  1.完成CateIconEntry.js、CateIconEntryList.js、GameIconEntry.js等代码

-------------------------------------
2020/04/01 09:36:56
今日工作
  1.编写多游戏大厅的部分代码


-------------------------------------
2020/03/31 11:07:52
今日工作
  1.修改app的数据获取流程
    从先登录，同时获取大厅数据，改为先获取大厅数据，然后才能登陆。
  2.编写LobbyEnterGames.js、HallDataDeal.js等代码

-------------------------------------
2020/03/30 11:07:52
本周工作
  1.完成app多游戏大厅
  2.完成app单游戏大厅

今日工作
  1.app项目环境部署，解决打包时的问题。
  2.修改app原生代码部分，去掉单游戏的游戏更新的内容。

-------------------------------------
2020/03/27 10:05:50
今日工作
  1.完成h5 lobby的返回系统
  2.开始app多游戏页面的开发。
  3.完成h5 lobby Hall2C_GameHallNotify的消息处理

/**
 * @param _otherEntryType
 * @param _type
 */
window.bdgame.enterEntry = function (_otherEntryType, _type);

-------------------------------------
2020/03/25 16:25:36
今日工作
  1.初步完成h5单游戏大厅的代码与调试。
所有界面
  1.LM
    LobbyMain
  2.SGP
    SingleGamePage
  3.MGP
    MultiGamesPage
  4.SGPMG
    SingleGamePageSingleGamePageMainGame
  5.SGPSG
    SingleGamePageSubGame
  6.MGPSG
    MultiGamesPageSubGame
从一个界面到另一个界面的所有可能性
  1.LM->SGP   
    A.PrePageType
      LobbyMain
    B.OtherGameInfo
    C.SingleGamePageMainGame
  2.LM->MGP
    A.PrePageType
      LobbyMain
    B.CateTypeArr
  3.SGP->SGPMG
    A.PrePageType
      LobbyMain
    B.OtherGameInfo
  4.SGP->SGPSG  RB
    A.PrePageType
      SingleGamePage
  5.SGP->MGP  RB
    A.PrePageType
      SingleGamePage
    B.CateTypeArr
  6.MGP->MGPSG  RB
    A.PrePageType
      MultiGamesPage
  7.MGP->SGP
    A.PrePageType
      LobbyMain
    B.OtherGameInfo
    C.SingleGamePageMainGame
  8.SGPSG->SGP
    A.PrePageType
      LobbyMain
    B.OtherGameInfo
  9.MGPSG->MGP  RB
    A.PrePageType
      SingleGamePage|LobbyMain
    B.CateTypeArr
需要存储的数据
  1.PrePageType
    LobbyMain, SingleGamePage, MultiGamesPage
  2.OtherGameInfo
  3.CateTypeArr
  4.SingleGamePageMainGame
MGP、MGPSG
SGP、SGPSG
SGP、SGPMG
SGP、MGP、MGPSG
游戏界面需要显示的数据
  1.是否显示ReturnBtn
  2.ReturnBtn返回到哪里
  3.其他游戏入口数据

-------------------------------------
2020/03/24 18:35:06
今日工作
  1.完成部分单游戏大厅的代码。


farkle app的工作
  1.完成farkle app的单游戏大厅
    布局规则同网页版的单游戏大厅
  2.完成farkle app的多游戏大厅
    布局规则同网页版的多游戏大厅

-------------------------------------
2020/03/23 09:31:51
今日工作
  1.调试h5多游戏大厅。
  2.完成h5多游戏大厅的功能。


问题
  1 在游戏界面，网页刷新后出现报错。
  2 farkle刷新之后游戏是否会在桌子。

本周工作
  1.完成多游戏大厅的调试。
  2.完成单游戏大厅的开发及调试。

我的工作
1 h5大厅
  1.1 单游戏大厅
    目前完成了一个版本，但新确定的需求尚未完成（其他游戏入口相关的改动）。
    预计2天时间完成。
  1.2 多游戏大厅
    已完成。
  1.3 h5大厅的webServer
    已完成。
2 Farkle App
  2.1 单游戏大厅
    已完成。
  2.2 多游戏大厅
    未完成。
    未确定需求：同一个app，是否即支持单游戏大厅，又支持多游戏大厅。
    开发时间不能确定。
  2.3 第三方app端接入
    未完成。
    未确定需求：第三方是否可以使用app接入平台大厅，以及如何接入大厅。
    开发时间不能确定。
3 统一App版本与h5版本的游戏接入接口
  未完成。
  预计3天。
4 开发toB的网页版前端
  目前暂未确定需求。
  开发时间不能确定。

-------------------------------------
2020/03/20 14:23:34
今日工作
  1.完成多游戏大厅的代码编写。

-------------------------------------
2020/03/19 18:29:32
今日工作
  1.编写多游戏大厅的代码。
    编写代码base_entry_list.js、base_img_check_entry.js、base_img_entry.js、cate_entry_list.js、cate_entry.js等。



-------------------------------------
2020/03/18 10:18:35
今日工作
  1.与海尖讨论确定大厅接口。
  2.完成大厅UI。
  3.开始多游戏大厅的代码编写。


-------------------------------------
2020/03/17 10:18:35
今日工作
  1.讨论并确定h5大厅的布局
  2.发现并解决Farkle游戏里的业务逻辑的流程问题
    与天华讨论后解决。
  3.修改登录的参数

单游戏大厅的布局规则
  1.针对每一个单游戏大厅，分别给予有限的入口数量，该数量由平台配置。
  2.入口类型可以是合集入口，也可以是游戏入口。
单游戏大厅入口显示规则
  1.优先显示category图标
    如果category里只有一个游戏，则显示游戏图标
  2.其次显示seperateDisplay的图标

--------------------------------------------
2020/03/16 09:50:35
今日工作
  1.基本完成h5大厅的版本
    大厅是一个html页面，支持的功能：
    1.1 页面显示的是一些游戏图标的合集，点击某个图标进入游戏；
    1.2 页面就是一个游戏，在该游戏页面有一个入口（记为E），点击E，则进入一个游戏合集的页面（该页面功能同1.2.1），E可以隐藏；
  2.完善游戏接入h5大厅、app大厅的文档

明日任务：
  1-：多游戏大厅里分类别显示游戏；现在平台是已经支持的
  2:-单游戏大厅里支持多个“合集”的入口。这个平台还未支持，之后会做
  3:-当一个合集里只有一个游戏时，合集的入口显示为该游戏图标，点击该图标直接进入游戏。平台已经支持。
  4.每个合集下面，只有一种类型的游戏。

本周工作
  1.完成h5大厅的版本
    包括两种大厅。
  2.完善游戏接入h5大厅、app大厅的文档
  3.完成farkle app版本的入口隐藏功能
  4.与海尖讨论确定接下来的开发内容


-------------------------------------
2020/03/13 14:10:13
今日工作
  1.调试Farkle、txsasslot游戏。
    遇到嗲用平台接口C2Gate_EnterRoom，返回202008的错误，平台侧尚未解决。
  2.开发第三方接入后，平台侧返回的页面是一个游戏页面的功能。
    拆分出lobby_multigames.js、lobby_game.js

  Farkle
    1.this.iframeBdgame.msgQueue
    2.this.iframeBdgame.enterRoomMsg


-------------------------------------
2020/03/12 19:27:39
今日工作
  1.调试合集页面的游戏接入。
  2.与马总、海尖讨论并确定第三方接入的方式。

1.第三方接入的方式已确定
  1.1 接入方式：第三方接入后，由web侧提供一个html页面的入口给第三方。
  1.2 该html页面支持的功能：
    1.2.1 页面显示的是一些游戏图标的合集，点击某个图标进入游戏；
    1.2.2 页面就是一个游戏，在该游戏页面有一个入口（记为E），点击E，则进入一个游戏合集的页面（该页面功能同1.2.1），E可以隐藏；

2.目前的进度
  2.1 h5大厅版本
    功能1.2.1正在收尾，预计明天（3.13）可以完成；
    功能1.2.2 没有实现。预计需要2天时间完成，即3.16号完成。（会与1.2.1兼容）
  2.2 farkle app版本
    功能1.2.1未实现，完成需要的时间需要暂不确定。
    功能1.2.2仅入口隐藏的功能未实现，预计0.5天时间即可完成。


当前平台整体功能和业务场景：
    1.应用场景和最终目标: 
      自身运营、To B两种服务方式，是以当前的平台功能衍生出两个独立的平台。（基本最终的状态就是我们要维护这两个平台系统）
      1.1 To B    ：提供给B端用户的基础的通用的游戏平台，B端用户通过API接入平台服务（就是完整的游戏大厅页面）。
      1.2 自身运营：是基于我们自己个性化的需求，打造自身的品牌，把所有自身运营的游戏业务都归并到这个平台下进行统一管理。
    2.当前目标：
      实现To B完整平台服务。

    3.To B平台整体功能和结构说明：
      3.1 平台服务
        提供整个平台业务调度和服务管理、游戏接入、建立平台统一账号体系等，并根据实际业务对外提供一序列API
      3.2 平台后台管理服务
        管理和配置平台所有基础数据、报表统计、服务管理和监控等
      3.3 游戏服务
        完成具体的游戏功能
      3.4 游戏大厅网站
        3.4.1 建立一个统一的大厅网站，兼容和支持单游戏大厅和多游戏大厅。B端用户通过平台的API，最终接入的就是这个大厅页面。
        3.4.2 在游戏大厅上实现一些增值业务，如广告、排行榜、兑换、任务（收集卡片奖励）等
      3.5 To B网站
        提供给B用户查询相应数据、API接入规则管理、配置游戏（与平台权限挂钩）、配置相关业务（如奖励）、配置页面相关主题排版等
-------------------------------------
2020/03/11 08:59:40
今日工作
  1.基本完成大厅界面。

      <!-- onlogin="FBLogin.checkLoginState();"> -->

  https://graph.facebook.com/128937725322092/picture?type=large&v=1
-------------------------------------
2020/03/10 16:17:16
今日工作
  1.完成h5大厅的lobby_avatar.js、lobby_img.js、lobby_money.js、lobby_ping.js代码。
  2.与海尖、天华开会讨论平台API的修改。

收货人: 王彪
手机号码: 135 3087 0264
所在地区: 广东省深圳市宝安区新安街道
详细地址: 裕丰路裕和花园1巷1号304


身份证：341 281 198 807 108 632
-------------------------------------
2020/03/09 09:30:10
今日工作
  1.发现并解决fetch使用https协议的NET::ERR_CERT_COMMON_NAME_INVALID错误。
    解决方法：重新申请证书，在CommonName选项，输入localhost。
  2.完成大厅页面的UI布局。
  3.讨论整理标签玩法。


本周工作
  完成h5大厅的开发（不包括接入google AFG、标签玩法）。

可以把这些功能分为四大模块：
  1.大厅
    包括大厅客户端、大厅webserver
  2.游戏
    包括游戏客户端、游戏服务端
  3.平台
    平台服务器
  4.后台
    包括后台客户端（配置页面）、后台服务器。
模块1是我在做；
模块2可以让ZHR做；
模块三是海尖在做；
模块四的客户端我可以做，服务器看看是海尖做合适，还是ZHR做合适。

1.增加一些https的请求；
2.html入口改为js入口；
3.原来直接与服务端进行的websocket的通信，改为通过大厅与平台进行通信。

马总，下面这些是跟海尖讨论、整理的结果，你看看有没有问题：
思路
  平台侧负责触发玩法的逻辑，并通知给大厅、游戏。
  游戏侧负责开发多个玩法，用于支撑平台侧的玩法。
  大厅侧负责展示玩法的规则、进度等，显示给玩家看。
牵涉到四个功能方：平台（平台服务器）、后台（配置页面）、大厅（大厅客户端）、游戏（游戏客户端+游戏服务器）。
业务流程
  1.在后台侧配置功能的规则。
  2.平台侧实时读取上述配置，并通知大厅、游戏侧显示。
  3.大厅显示玩法规则、说明。
  4.游戏侧根据配置的规则，放开或者关闭对应的玩法。
以搜集玩法（记为标签A）为例，功能的开发分配如下：
  搜集玩法的规则举例：配置标签A，即玩家通过玩一局Farkle游戏里的打地鼠玩法，获得一张卡片。5张该卡片可用于兑换某种物品。
  1.后台
    配置标签A，并给Farkle游戏添加该标签。
  2.平台
    实时读取后台的配置，然后通知大厅侧、游戏侧：Farkle游戏获得标签A。
    处理Farkle游戏的数据，在玩家玩一局Farkle游戏的打地鼠玩法后，发一张卡片给该玩家（记录到平台的数据库中），并通知大厅侧、游戏侧。
  3.大厅
    收到平台的Farkle游戏的标签A消息后，在Farkle游戏的入口图标上显示标签A的icon。
    在大厅添加搜集功能，用于给玩家展示搜集中的所有玩法、进度等。
  4.游戏
    预先开发打地鼠玩法，以支撑标签A玩法。
    收到平台侧的卡片奖励消息后，展示玩家获得奖励的消息。

1.搜集功能。
  平台侧配置搜集的玩法，在大厅里显示。
  平台对游戏数据进行分析，在合适的时机，触发掉落功能，并通知大厅、游戏掉落的结果。
  搜集玩法是可配置的，平台侧修改后，大厅、游戏侧实时进行变动。
  搜集具有时效性、一个游戏具有多个搜集玩法。
  类似任务功能。
2.问题
  3）BNG\Features entry bottleneck，这个不理解。

3.功能的开发分配
  平台
    1.搜集玩法的配置、触发及发奖逻辑。
    2.通知大厅、游戏，搜集玩法的变动。
  大厅
    显示搜集的功能。
  游戏
    1.掉落物品所需要的玩法的开发，及收到平台消息后玩法的显示与隐藏。
    2.显示大厅发来的通知消息，用来统一处理平台发来的消息。
  后台
    配置数值。

先以一个具体问题开头：
大厅做的一些功能，如何能在游戏中比较无缝的衔接好。比如“大厅”功能实现的集齐5张什么样卡片即可获得X奖励。
这5张卡片分别在5个游戏中可获得，有第一个卡片的游戏对bet无限制，第二个卡片只在中级场出现比如bet 10000，诸如此类。

另外，可获得卡片的这5个游戏不固定。 同时，处于可搜集的这些游戏，游戏图标会有一些显示上的“标识”

最后，可以对掉落的东西，平台测可做一些数值的配置，包括概率、rtp等（当然游戏要提前做好对应的功能）

目的：围绕诸多个游戏，通过丰富大厅的功能玩法把每个游戏盘活。

所以第一个切入点，或者说是功能就是搜集

每个游戏设置若干个标签：
（1）对应游戏中具体的一些参数配置如概率等。当标签激活后，游戏中的数值会跟随变化，并且游戏图标的外观会加一个视觉上的标识\特效
（2）标签可设置时效性，如持续8小时、24小时等
（3）一个游戏可同时激活多个标签
  标签种类：每个标签名字待定，但功能倾向于统一每个游戏都统一。我现在能设想的是以下几点
（1）物品掉落标签==》配置每个游戏中的物品掉落。主要对应搜集的玩法。
（2）Odds Booster标签===》对应配置游戏中的概率、RTP等
（3）BNG\Features entry bottleneck===》对应配置游戏中特色玩法的bet，也就是说高于此bet时候feature激活。
（4）其他你们能想到的

涉及到问题：
大厅做的一些功能，如何能在游戏中比较无缝的衔接好。比如游戏中出现一些大厅激活的一些功能图标。相当于游戏中需要预留好接口。

你现在做的一个大厅 是一个纯粹的“原始”大厅，这样的大厅玩家能玩进去的很少，所以我们要加入一些功能，跟游戏密切接合起来。
一个简单的类比：你之前玩过MMO或arpg的时候，为了做一个装备，可能要反复刷不同的几个副本，对吧？你可以把若干个我们的H5游戏比如Slots当成副本。至于掉落什么，掉落概率等等，这些我们后台配置。

这里的“装备”，我们可以当成一个“iPhone”诸如此类

你可以先跟LHJ讨论，看看那些是平台做的、那些是大厅、那些是游戏（游戏只是按你们给的规则来实现功能）
---------------------------------------------------

2020/03/06 15:32:36
今日工作
  1.添加登陆页面index.html的背景图、logo，并使用css实现自适应功能。
  2.完成浏览器端http_fetch.js、error_code.js、LoginData.js、login_server.js等代码。
  3.发现在https页面中，使用websocket需要wss协议的问题。
    已跟平台侧沟通，提出提供支持wss协议的功能。

---------------------------------------------------
2020/03/05 16:25:56
今日工作
  1.配置Fb的网页版登录后台。
    发现配置oauth的url时，需要使用域名而非ip的问题。
  2.配置webserver的https。
    Fb的oauth的url，需要使用https协议，而非http协议。
  3.完成Fb登录的功能（Fb登录成功后跳转到Farkle游戏的功能除外）。


<div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/zh_CN/sdk.js#xfbml=1&version=v6.0&appId=469791273702134&autoLogAppEvents=1"></script>

<div class="fb-login-button" data-width="180" data-size="large" data-button-type="login_with" data-auto-logout-link="false" data-use-continue-as="false"></div>

---------------------------------------------------

2020/03/04 18:12:09
今日工作
  1.模拟浏览器端调用，完成webserver供浏览器调用的接口logingameapp、realmtogate、adgold、gogame、hallgame的调试。
  2.发现并解决平台api接口中，url地址的域名问题。


---------------------------------------------------
2020/03/03 09:27:46
今日工作
  1.完成webserver供浏览器调用的adGold、goGame、hallGames接口的代码。



---------------------------------------------------
2020/03/02 09:03:31
今日工作
  1.完成error_code.js。
  2.完成供浏览器调用的otherGameImg接口。

本周计划
  1.完成webserver的开发。
  2.完成部分h5客户端的开发：Fb登录、Farkle游戏侧的功能。

1.查看对接平台的接口是否完成 1
  LoginGameApp、RealmToGate、HallGames、AdGold
2.确定对接浏览器的接口 0
  1）登录界面 1
    FB登录信息转发验证
      /Login
  2）Farkle游戏界面
    h5大厅图标地址
      /hall/otherGameImg
    获取h5大厅数据接口
      /hall/hallGames
  3）h5大厅
    点击每个h5大厅的游戏，进入的游戏url
      /hall/goGames
    增加金币
      /hall/adGold

3.Google Ad
  看广告
---------------------------------------------------
2020/02/28 18:04:28
今日工作
  1.完成webserver调用平台的AdGold、RealmToGate、HallGames接口代码。
  2.完成webserver供浏览器调用的login接口。
  2.完成session的配置。

2020/02/27 10:50:42
今日工作
  1.完成some_defines.js、server_util.js、http_net.js等工具类
  2.完成webserver调用平台的LoginGameApp接口
  
webserver调用平台接口
  1./api/LoginGameAPP
  2./api/auth/RealmToGate
  3./api/HallGames

---------------------------------------------------
2020/02/26 19:57:23
今日工作
  1.讨论网页版接口
  2.部署webserver环境
  

---------------------------------------------------
2020/02/25 10:35:47
今日工作
  1.确定实现h5大厅的开发方式：fairygui实现h5网页，webserver做数据处理及请求转发。
  2.确定h5大厅的页面内容，以及业务数据流转过程。讨论确定webserver需要开发的接口。


h5网页开发内容
  1.登录界面
    登陆界面只需要支持Facebook登录这一种方式。
    登录成功之后，需要直接跳转到Farkle游戏（网页版）。
  2.大厅界面
    大厅界面展示的内容，是很多个游戏的入口icon。

业务流程：
  1.玩家进入登陆界面。
  2.玩家进行FB登录。
  3.Fb登录失败，停留在登陆界面。
    登录成功，则需要调用webServer的登录接口，进行我们自身的平台登录。
  4.自身平台登录验证成功后，会通过webServer返回Farkle游戏的url，然后就会做url重定向。这时玩家就进入到Farklle游戏界面了。
  5.在Farkle游戏界面中主要包括两部分内容：a.Farkle游戏自身的功能，如Frakle游戏的四个模式信息等；b.一个大厅按钮，用于进入大厅界面，该大厅就是上面说的大厅界面。
  6.玩家可以随意体验Farkle游戏的任意功能。
  7.点击大厅按钮时，进入大厅界面。大厅界面需要展示的内容，通过http请求从webserver获取。
  8.h5游戏前端与其服务器进行通信时，所依赖websocket，是公共的websocket。该websocket的地址在登录自身平台成功后返回。websocket的建立，在进入游戏之前完成即可。
  这就是从登录到大厅界面的业务流程。至此所有的页面，都已经展示给玩家了。

浏览器端调用的接口
  1.平台的登录接口
    Fb登录成功后，将相关用户相关信息发送给webserver，做平台登录。
  2.Frakle大厅的url
    平台登录成功后，需要将Frakle大厅的url返回给浏览器。
  3.h5大厅入口的图标icon
    在Frakle游戏里，需要展示一个图标，用于作为h5大厅的入口。
  4.h5大厅的入口地址
    点击h5大厅的入口icon后，需要一个获取入口url的地址
  6.h5大厅里的数据接口
    接口返回的数据是，在大厅需要展示的游戏信息
  7.h5大厅里游戏的入口icon
    接口返回的数据是，单个游戏的url地址

浏览器同一域名下，存储cookie的数量（30-50）及大小（4K）有限制

webserver接口
  1.供浏览器端调用
    平台登录

  2.调用平台端的API

发现问题：
  1.展示游戏界面的业务流程。
    浏览器想webserver发送平台登陆请求后，webserver会向平台发送转发验证请求。验证失败，则webserver原样返回给浏览器；验证成功，则webserver向浏览器回一个游戏的url地址。至于websocket的url地址以及所需的key信息，是不能在此时返回给浏览器。因为在网页不使用服务端渲染的模式时，此时浏览器端还没有从服务端获取html页面以及js文件，若此时数据传过来，数据没有合适的存放位置（我感觉这个数据存入cookie是不合理的）。所以应该再增加一个接口，用于给浏览器端js获取websocket的url及对应的key值。
    进入大厅里的某个游戏，也存在同样的问题。

Login

webserver接口内容


web服务器-->平台服务器
  1.
1.LoginGameAPP
  登录token
  返回web服务器的大厅地址
2.登录大厅
  验证token（平台服务器）
  
---------------------------------------------------

2020/02/24 10:45:32
今日工作
  1.整理h5game转换为wxgame文档
  2.打包web3：彩球、走地百家乐、龙虎斗。
  3.整理完成ios客户端需要的时间，讨论网页版大厅的实现方式。

本周计划
  开发网页版大厅


插件包的集成配置这一部分，ios版本的开发时间，大概需要7.5天的时间。
ios的RN环境配置、打包，原生代码，这两部分Android项目花的时间共计大概是3周。
由于我只做过unity项目的ios打包，没有做过ios原生项目的打包，也没有做过ios的开发（ObjectC/swift），所以这两部分对应的ios版本的时间不确定。


集成的插件包（9个）
  RN集成+原生的配置时间，0.5天/个，总共4.5天，另外其中某些包的rn里的写法，ios和andriod不同，找出+修改时间估计共需3天。
  react-native-admob
  react-native-gesture-handler
  react-native-i18n
  react-native-fs
  react-native-fbsdk
  react-native-device-info
  react-native-vector-icons
  react-native-randombytes
  react-native-fbads
ios的RN环境配置、打包
  android部分，大概花了3天时间。
  我只做过unity的ios环境打包，没有做过原生项目的打包，所以这部分的时间不能确定。
原生代码部分
  android部分，大概花了2周多的时间。
  原生代码包括：2个Activity，1个工具类（读写文件、获取MD5值等），2个Native模块（RN下载接口、FB广告），网络请求、下载工具模块，获取后台的token模块，处理App、Farkle的更新及下载逻辑模块。
  我没有做过ios的开发（ObjectC/swift），这部分的时间也不能确定。

---------------------------------------------------
2020/02/22 17:34:41
今日工作
  1.完成gp ad功能。
  2.完成自动登录功能。

登录成功存入的数据
  uid、token

BDYXGamesData
  1.platToken
  2.Realm URL
  3.userToken
  4.uid
  5.usertype
---------------------------------------------------

2020/02/21 19:04:46

今日工作：
  1.配置Google Admob，申请奖励广告。
  2.引入react-native-admob，用于开发google视频激励广告。
  3.发现无法打包的问题，查找解决方法，暂时没有结果，需要继续花时间解决。
---------------------------------------------------
2020/02/20 11:06:59
今日工作：
  1.添加游戏渲染结束通知接口，用于显示事先隐藏的WebView界面。
  2.添加提供给游戏调用的播放广告接口，用于播放广告。
  3.测试FB广告发现无法播放：缺少广告位编码。无法申请成功商务管理平台，原因未知。
  4.开始接入Google广告。
  
  游戏渲染结束后，调用type为AppRequest，route为GameRendered的app接口，就会将背景图隐藏，显示游戏。
---------------------------------------------------
2020/02/19 18:37:22
今日工作：
  1.配置FB的开发者中心中的Farkle Mania应用。
  2.实现APP的FB登录调起网页版的功能。

2020/02/18 14:52:52
---------------------------------------------------
今日工作
  1.解决昨天遇到的RN缓存错误的问题。
  2.解决打签名包遇到的资源重复、签名文件配置密钥别名的问题，并打出Android签名包。
  3.发现保存token等信息到手机时，格式错误的问题。

2020/02/17 17:13:13

ssr://NDUuMzIuODIuMTE0OjI4MDM6YXV0aF9zaGExX3Y0OmFlcy0yNTYtY2ZiOnRsczEuMl90aWNrZXRfYXV0aDpRbVZwWkc5MWVXbDRhV0Z1TVRJei8_b2Jmc3BhcmFtPSZncm91cD1SbkpsWlZOVFVpMXdkV0pzYVdN

今日工作
  修改部分彩球及全部走地百家乐的bug，优化龙虎斗的音效反馈。
  配置VPN环境。

本周计划
  1.完成FB登录、弹出看广告页面的功能。
  2.解决打包Release出现的问题。
  3.接入Google Play的SDK。

---------------------------------------------------
2020/02/14 12:12:56
今日工作：
  1.修改部分龙虎斗的音效，优化走地的音效反馈。
  2.优化Farkle App打开游戏慢的问题。

现在遇到了这个问题，大家有没有比较好的解决方法：
Farkle App里，在使用react native的WebView显示游戏时，是每一个游戏分别开启一个WebView来显示的。这种方式显示游戏，会出现比较长的白屏时间。这个白屏时间主要用于启动WebView，加载并解析laya及fairygui的js资源，加载并解析游戏资源。
为了减少白屏时间，现在使用这种方式进行优化：所有游戏共用一个全局WebView，这样就可以避免，在APP的单次启动期间，第二次打开游戏时，重复启动WebView、加载并解析laya及fairygui的js资源的工作，从而减少白屏时间。
现在遇到了这个问题：在React native中，怎么使 非游戏页面 与 全局WebView页面 在内存中共存，即如何在显示非游戏页面时，隐藏全局WebView页面，保证其不被销毁。

大家有什么方法，来解决这个共存的问题吗？

在使用react native（以下简称RN）开发APP时，有这样一个需求：在APP中需要打开一些本地的h5游戏。
使用的方案是，使用RN的WebView组件来展示这些游戏。即每打开一次游戏，就调用一次WebView。
这种方案发现了这个问题（问题1）：每次打开游戏时，都会有一段时间的白屏。
经查发现，从点击游戏入口，到白屏结束这段时间，是用于启动浏览器内核（android内嵌），启动WebView，加载、解析脚本等。
为了减少白屏的时间，使用了这种方案：在RN中建立一个WebView页面，使其在APP的整个生命周期中一直存在而不销毁。每次打开游戏时，都在这个WebView页面进行显示。从而避免重复启动浏览器内核、启动WebView等的时间消耗。
在这个方案中，会遇到这个问题（问题2）：由于APP中除了WebView页面，还有其他的一些RN的非游戏页面，需要保证在非游戏页面与WebView页面切换时，这个WebView页面不被销毁。即打开非游戏页面时，隐藏WebView页面，而不销毁它，在需要的时候，再显示这个WebView页面。

如何解决问题2？

react native

2020/02/13 18:30:41
今日工作
  1.检查水果机、龙虎斗等游戏是否存在重复下注的bug。
  2.替换彩球的所有需要修改的音效及走地百家乐的部分音效。

---------------------------------------------------
2020/02/12 10:40:15
今日工作
  编写完成GlobalWebView的代码80%。
  修改彩球、飞禽走兽的bug。

---------------------------------------------------
2020/02/11 15:52:23
FarkleApp
  外网服务器地址地址
    http://52.220.211.57:8080。
  服务器路径
    /usr/plat/test/
今日工作
  编写GlobalWebView代码至60%。
  发现 非游戏页面 与 全局WebView页面 如何共存的问题，即如何在显示非游戏页面时，隐藏全局WebView页面，保证其不被销毁。

---------------------------------------------------
2020/02/10 08:08:22
目前的主要工作内容：
  优化FarkleAPP打开Farkle等游戏的速度。
本周预计的工作进度：
  1.完成全局WebView(GlobalWebView)的代码工作。
  2.将打开Farkle的游戏的WebView改成全局WebView。
  3.将打开其他游戏的的WebView改成全局WebView。
今日工作：
  编写了一部分全局WebView的代码。

---------------------------------------------------

------------------------------------------------------------
2020/01/08 15:31:22
走地百家乐优化
1. 将下注上限改为5000，后台可配置 1
  
2. 修改对应规则 1
  
3. 修改最大下注额的提示，由弹框改为飘字 1
  
4. 检查系统封锁 1
  
5. 修改赔率，后台可配置 1
  

------------------------------------------------------------
Error: watch  EMFILE
进入房间，客户端报错

------------------------------------------------------------
ShellApp
  9.上传大文件时，会丢文件数据 1
    
  8.更新新版本资源失败 1

  7.第一次下载游戏失败 1


  6.是否登录才能进游戏
  5.页面布局
    单游戏：进入APP之后，直接显示一个游戏的内容，例如显示Farkle游戏的大厅。
    多游戏：进入APP之后，直接显示多个游戏的入口，例如显示Slot_LoL、Slot_Texas、DDZ等的入口。
  1.服务端websocket主动断开
    断开原因需要告知客户端
  2.api/platform/HallData的数据处理

  3.游戏数据添加ID属性

  3.更新时，会把games下的所有文件都删除



------------------------------------------------------------
Bunco
http://www.playonlinedicegames.com/bunco
https://www.wikihow.com/Play-Bunco
1V1
  1.一共6轮，参与玩家2人，每次投掷3个色子。
  2.所有玩家轮流掷色子，掷完后，有几个色子的点数与当前的轮数相同时，就加几分。如果三个色子的点数与当前的轮数都相同，则加21分。
  3.第一个玩家到达21分后，本轮结束。分数达到21分的玩家赢得了本轮比赛。
  4.6轮结束后，赢得轮数最多的玩家，赢得本次比赛。

12人
  1.一共6轮。参与玩家12人，每次投掷3个色子。
  2.桌子分配
    将12个人分配到三张桌子上：头桌、中桌、尾桌。头桌：收集12个人的所有计分卡，任选四张卡片，在上面画小星星；打乱卡片，然后玩家随机抽取积分卡；抽到带有星星的计分卡的人，就是头桌的人。剩余的人平均分配到中桌和尾桌。（开发的时候，考虑使用随机分配的方式，不再通过计分卡画星星的方式分配）
  3.分配队伍
    将桌子上的玩家分成两个队伍，面对面的玩家属于一个队伍。队伍中的玩家每轮都会变化。如果队伍中只有1个人，那么他每次需要掷两轮色子，并记录分数。
  4.选择记分员
    每一队选一个记分员。记分员负责记录每一次掷色子的分数。（开发的时候，由系统代替记分员）
  5.第一轮。先选择桌子上的一个人掷色子。掷出的色子中包含几个1，就记几分。如果掷出3个1，就记21分（该玩家要喊出“Bunco！”）。如果掷出了三个同样的非1点数，则记5分。当该玩家掷出的色子中不包含1，或者他的累计分数达到或超过21，就换第二个人掷。两支队伍依次循环掷色子，直到本轮结束。
  6.当头桌的队伍中，有人累积达到或超过21分时，该轮结束。他所在的队伍要喊出“Game！”。然后头桌的记分员响铃示意本轮结束。每一桌中，分数最高的队伍就是该桌的胜利者。如果某个桌子的两支队伍分数相同，则每支队伍选出一个人，掷一个色子，掷出的点数高的队伍获胜，且这一次掷的分数不计入计分卡。
  7.赢的队伍在记分卡上写一个W，输的队伍写一个L。然后按照以下规则交换桌子：头桌的胜者留在头桌，败者去中桌；中桌的胜者去头桌，败者去尾桌；尾桌的胜者去中桌，败者留在尾桌。
  8.交换队友。这一步的目的是增加趣味性，可以略去。同一桌的两个队伍，互相交换一名玩家，以组成新的队伍。
  9.继续进行后续的5轮游戏。当6轮都结束时，统计每个队伍的总分，以及每个人的Bunco总数。
  10.按照以下方式排名发奖：根据Bunco数量发奖，或者根据获胜次数发奖，或者根据每个人的总分发奖，或者组合以上条件发奖。
Question
    1.如果在掷色子时，玩家掉线，或者网络因素导致掷色子失败，服务器如何处理？是一直等待，还是超过规定时间，认为该玩家的掷色子的积分为0。
      超过时间，由系统自动掷色子.
    2.如果掷色子失败时，积分为0，那么在12人玩法中，第六步，如果头桌的队伍每次都掷色子失败，如何结束游戏？
      见1.
    3.确定12人玩法中的获胜及发奖规则。


------------------------------------------------------------
2019/08/02 18:17:21
TODO 2019/09/10 09:45:50

BUG
  7.2987 [测试-web4][斗地主]返回大厅弹出代码提示 1
  
  6.2986 [测试-web4][斗地主]返回列表无其他游戏入口 0

  6.结算时的bouns、盈亏数值问题 0

  5.3004 [测试-web4][斗地主]房间底分被计算在盈余数值内 1 1

  4.客户端显示的出牌顺序，有时是逆时针，有时是顺时针。 0

  3.3006 [测试-web4][斗地主]最后一个直接叫地主翻牌慢 1 1

  2.3007 [测试-web4][斗地主]局中倍数显示错误  1 1
    经测试发现，仅在以下情况下，胜方的倍数不会及时刷新，已修复：
      打出春天时的倍数显示。
  1.一局结束后，某个玩家先离开桌子，再进入桌子，桌子界面没有初始化 0
    其他离开桌子的玩家，仍然显示在桌子上。 0
    上一局的结果，包括最后一手牌、报警动画、地主农民动画没有清掉。  0
功能
  
  ----------------2020/01/04 10:35:12
  31.下注、结算关联成功与失败 1

  30.冻结提示 1
    在牌桌界面，倍数的右侧，添加冻结金额，点击冻结金额区域，提示对应的逻辑。
    暂时不需要显示的部分，隐藏，在需要显示的时刻，再显示出来

  29.底分、倍数显示错误 2

  28.倍数计算bug 1
    炸弹没算倍数
  27.出牌动画 1

  26.操作按钮bug 1
    在牌桌上准备，看不到操作按钮 
  25.炸弹控制 1
    控制每盘发牌后，当前牌桌上，最多只生成1个炸弹。1
    存在bug 1

  24.下注、结算、余额通知接口 1
    下注 1
      思路
        控制每盘发牌后，当前牌桌上，最多只生成1个炸弹。在玩家进入游戏时，直接冻结100倍的底分的钱。
        冻结下注后，是否发送余额信息变化。
    结算 1
      根据本局倍数，将钱多退少补。并抽取赢家5%的佣金。
    余额通知 1

  23.修改发牌接口，不再通知客户端别人的牌 1

  22.客户端增加模式入口 1

  21.玩家余额不足，通知换房间 1

  20.抽出配置文件 1
    
  19.规则 1

  18.设置 1

  17.今日盈亏 1

  16.返回功能 1
    返回大厅
  15.声音 1

  14.机器人 1

  13.提示功能 1
    提示功能应该是是从小到大的顺序提示的
      非纯牌型的牌应该放到纯牌型的牌后面，炸弹应该放到非纯牌型的牌后面 
    上家不出牌，本家提示按钮点击没有响应  1
  12.下家出牌失败 1
  11.直接叫3分，加倍时间处理 1   
  9.收到结算推包时，修改客户端玩家的状态为未准备 1
  8.都不叫地主 1
    服务端重新开局，客户端主动重新进入Ready状态。 1
    连续不叫时，下一轮开局，第一个可以叫的玩家不叫，就会重新开局  1
  7.牌桌结束，修改桌子状态为Waiting 1
    服务端检查删除桌子，并同步消息到客户端
  6.Room-Table Comps 1
    Three Head Info 1         //All TableState  
    Three Left Card 1         //All TableState
    Three Hand Card 1         //All TableState
    Three OperWord 1          //All TableState
    Two CardNumItem, MyOwnCard 1    //All TableState
    Two Clock, My OprtClock 1     //[CallLandlord, Settle)
    My OprtBtns 1           //Waiting, [CallLandlord, HandCard]
    Base Score 1            //All TableState
    Ratio 1               //All TableState
    LandlordHat 1           //All TableState
    Words 1               //进入房间触发、点击准备触发

  5.匹配成功后，刷新进入后，立即进入发牌模式 1
    断线重连的问题 1
    断线重连后进入加倍状态，客户端倍数计算会有问题。 1
    网络断开重连后，生成的GamePlayer与断开前的是否一致。牵涉到绑定的DDZGamePlayerComponent（GamePlayer的销毁机制） 1
  4.压力测试 0
    每秒加入玩家
    每秒匹配量
  3.检查玩家加入时调用的Add()的逻辑 1
    已存在、失败、成功的逻辑，是否存在问题。
    DDZHallPlayerComponent.Add();
    DDZRoomPlayerComponent.Add();
  2.玩家操作 1
    准备 1
      游戏结算后，玩家是处于UnReady状态的，所以需要添加Ready操作接口
    加入房间 1
      玩家在大厅中时，可以加入房间
    退出房间 1
      玩家在桌子中处于未匹配状态时，可以退出房间
    加入游戏 2
      
    退出游戏 2
  1.人数变化通知 1
    大厅：加入大厅、从房间退出
    房间：加入房间
      
UI
  大厅
    余额
    今日盈亏
    Ping值
    返回按钮
    设置
    房间入口列表


  房间
  桌子

成功加入桌子，推送消息给玩家
  1.掉线重连
    桌子信息
      倍数
      地主
      桌子状态
      预留给地主的三张牌
      上一手牌
      上一手牌的玩家索引
      当前牌权的索引
      当前牌权的剩余时间
    同桌的所有玩家List<PlayerInfo>
    同桌的所有的牌
  2.匹配桌子成功
    桌子信息
      桌子状态
    同桌的所有玩家List<PlayerInfo>
  PlayerInfo
    Id
    Account
    Balance
    NickName


一局游戏
  一张桌子
  三个人
  一副牌
    三张底牌
    三组牌
  
数据操作
  桌子.状态-->三个人
  桌子.纸牌-->三个人
  三个人.操作-->桌子
  三个人.出牌-->桌子
  
计时器
  时间-->桌子
  
引用关系
  桌子-->三个人
  三个人-->桌子


流程-服务器：
  1.发牌
    3s，共享时间
  2.叫地主
    5s，每个玩家有5s的时间
    如果有玩家在叫牌前选择“明牌开始”，则第一个选择“明牌开始”的玩家优先获得叫牌权，否则系统随机确定第一个可以“叫地主”的玩家。
    玩家可以选择“叫地主”、“不叫”。
    有玩家选择“叫地主”后，该阶段立即结束；规定时间内，没有玩家“叫地主”，则重新发牌。
    
  3.抢地主
    5s，每个玩家有5s的时间
    “叫地主”后，每位玩家有且只有一次“抢地主”的机会，顺序为逆时针方向。
    每“抢地主”一次，游戏倍数*2。
    凡是有过“不叫”地主操作的玩家，不可以进行“抢地主”的操作。
  4.明牌
    不做“发牌明牌”。
    3s，共享时间
    明牌分两种：“明牌开始”、“明牌”。
    “明牌开始”，在还没发牌时，就选择明牌并保持开始游戏，游戏倍数*5.
    “明牌”，在收完三张底牌后可以选择明牌并开始游戏，游戏倍数*2.
    每一次“明牌”操作，都会累加游戏倍数。
  5.加倍
    3s，共享时间
    地主拿到底牌之后，出现“加倍”功能，用户可以选择“加倍”或“不加倍”。
    符合条件的玩家才可以做“加倍”操作。
    所有玩家选择“加倍”或“不加倍”操作后，或者倒计时结束后，开始出牌。
    加倍后游戏得分计算为：倍数*每分对应欢乐豆关系*自己加倍数*对手加倍数，若有加倍则*2，若没加倍则*1.
    加倍条件为规定的用户欢乐斗数量超过该房间规定的值。
    条件细则：
      1.加倍用户为地主时，必须全部玩家的欢乐豆数量全部超过房间规定的数值。
      2.加倍用户为农民时，必须自己和地主玩家的欢乐豆数量全部超过房间规定数值。
  6.出牌
    15s，每个玩家有15s的时间
    将三张底牌交给地主，并亮出底牌让所有人都能看到。地主首先出牌，然后按逆时针顺序依次出牌。
  7.结束
    有一个玩家的牌出完，则游戏结束，该方胜利。

操作：
  离开 1
  进入游戏 1
  加入房间


斗地主规则：
1.发牌
  54张牌，每人17张，留3张做底牌。
  
2.叫牌
  牌桌上玩家依次“叫地主”，第一个人“叫地主”后，交牌结束。若轮流一圈无人叫牌，则重新发牌。
3.第一个叫牌的玩家
  第一轮叫牌的玩家由系统随机选定
  如果有玩家在叫牌前选择“明牌”，则第一个选择“明牌”的玩家优先获得叫牌权。
  如果有玩家在叫牌前选择“明牌”，且三名玩家都不选择“叫地主”，则系统选择第一个“明牌”的玩家为地主。
4.抢地主
  首个拥有叫地主权利的玩家，不能抢地主
  当某位玩家叫完地主后，按照次序其他玩家均有1次“抢地主”的机会。玩家选择“抢地主”后，如果没有其他玩家继续“抢地主”，
  则地主权力属于该名“抢地主”的玩家。
  如果没有任何玩家选择“抢地主”，则地主权利属于“叫地主”的玩家。
  每“抢地主”一次，游戏倍数*2。
  凡是有过“不叫地主”操作的玩家，无法进行“抢地主”的操作。
5.明牌
  明牌分三种情况，“开始明牌”，“发牌明牌”，“明牌”。
  明牌开始：在还没发牌时，选择明牌并保持开始游戏，游戏倍数*5。
  发牌明牌：在发牌的过程中选择明牌游戏，根据发牌数量的多少游戏倍数*4和*3。
  明牌：在收完三张底牌后可以选择明牌并开始游戏，游戏倍数*2。
  若同时有多名玩家选择“明牌”，则按照最大的明牌倍数计算。
6.加倍
  抢完地主后，地主出牌前增加一个翻倍选择功能。抢完地主后地主把底牌拿到手中，出现翻倍选择功能。
  在限制时间内完成加倍或不加倍的操作后，必须等待其他玩家完成相关操作或直到限制时间到，则游戏开始由地主出牌。
  加倍后游戏得分计算为：倍数*每分对应欢乐豆关系*自己加倍数*对手加倍数，若有加倍则*2，没有加倍则*1.
  加倍条件为规定的用户欢乐豆数量超过该房间规定的值即可。
  规定对象如下：
    加倍用户为地主时，必须全部玩家的欢乐豆数量全部超过房间规定的数值；
    加倍用户为农民时，必须自己和地主玩家的欢乐豆数量全部超过房间规定的数值。

7.出牌
  将三张底牌交给地主，并亮出底牌让所有人都能看到。地主首先出牌，然后按逆时针顺序依次出牌。

8.牌型
  主牌型
    单牌
    对子
    三张牌
    三带一
    三带一对
    炸弹
    四带二
    四带两对
    顺子
    连对
    飞机
    飞机带单翅膀
    飞机带对翅膀
    四个连牌
    四个连牌带单张
    四个连牌带对子
  副牌
    单牌：三带一、四带二、飞机带单翅膀
    对牌：三带一对、四带两对、飞机带对翅膀

    副牌数量
      单牌1张：三带一
      单牌多张：四带二、飞机带单翅膀
      对牌一对：三带一对
      对牌多对：四带两对、飞机带对翅膀

  [1, 1]单牌：单个牌。
  [2, 2]对牌：数值相同的两张牌。
  [2, 2]火箭：双王（大王和小王），最大的牌。
  [3, 3]三张牌：数值相同的三张牌。
  [4, 4]炸弹：四张同数值牌。
  [4, 5]三带一：数值相同的三张牌+一张单牌或一对牌。
  [5, 12]单顺：五张或更多的连续单牌。不包括2点和双王。
  [6, 8]四带二：四张牌+两手牌。
  [6, 20]连对：三张或更多的连续对牌。不包括2点和双王。
  [6, 18]飞机：两个或更多的连续三张牌。不包括2点和双王。
  [8, 20]飞机带翅膀：飞机+同数量的单牌或对牌。
  
  [1, 1]单牌 1
  [2, 2]对子 1
  [2, 2]火箭 1
  [3, 3]三张 1
  [4, 4]炸弹 1
  [4, 4]三带一 1
  [5, 5]三带一对 1
  [5, 12]顺子 1
  [6, 6]四带二 1
  [8, 8]四带两对 1
  [6, 20]连对 1
  [6, 18]飞机 1
  [8, 20]飞机带单翅膀
  [10, 20]飞机带对翅膀
  
  1，单牌 
  2，对牌、火箭 
  3，三张 
  4，炸弹、三带一
  5，三带一对、单顺
  6，四带二、飞机、连对
  7，单顺
  8，单顺、连对、飞机带翅膀1
  9，单顺、飞机
  10，单顺、连对
  11，单顺
  12，单顺、连对、飞机带翅膀
  13，--
  14，连对
  15，飞机、飞机带翅膀
  16，连对、飞机带翅膀
  17，--
  18，连对、飞机
  19，--
  20，连对、飞机带翅膀
  

9.牌型大小
  火箭最大，可以打任意其他的牌。
  炸弹比火箭小，比其他牌大。都是炸弹时按牌的比值比大小。
  除火箭和炸弹外，其他牌必须要牌型相同且总张数相同才能比大小。
  单牌按分值比大小，依次是大王>小王>2>A>K>Q>J>10>9>8>7>6>5>4>3。
  对牌、三张牌都按分值比大小。
  飞机带翅膀和四带二按其中的三顺和四张部分来比。

10.胜负判定
  任意一家出完牌后结束游戏，若是地主先出完牌则地主胜，否则农民胜。
------------------------------------------------------------




马总，亚马逊的MWS服务，主要提供库存服务、查询订单详情、查询商品信息三部分。
如果要结合到游戏中，可以用的功能主要是库存服务，以及查询商品信息（有一些限制）两个部分。即可以从亚马逊获取商品信息，并在游戏中展示出来。
但是不能通过该API在游戏中直接生成亚马逊的订单。即下订单这个功能，依然需要在游戏里面实现（或者在自己的电商系统里实现）。

MWS的API的功能
  API部分主要提供了库存、查询订单详情、查询商品信息三部分。
  1）库存
    将自己的货物存入亚马逊的仓储系统时，可以使用该部分API同步库存信息。存入仓储系统后，可以使用亚马逊的配送服务。
    在配送时，可以使用亚马逊的物流系统配送，也可以使用第三方的物流系统配送。
  2）订单
    可以通过HTTPS服务，查询已经生成的订单信息。
  3）商品
    可以通过HTTPS服务，受限地查询亚马逊商城的指定物品的信息。返回的信息为XML格式，其中的信息比较全面，包含价格、品牌、图片的URL地址等。
    这里受限地查询，是指需要提供要查询的商品信息的商城编码，被查询物品的编码等，且返回的商品信息条数有限制，数量级在几十条不等。

另外，使用MWS服务时，需要有一个亚马逊的卖家账户，并且注册使用MWS服务。

马总，亚马逊的MWS服务上午了解了一下，还没看出头绪来。
因为过年要带回家的东西落在住的地方了，所以下午准备请半天的假，MWS的了解要放到年后了



1.facebook自己的店铺
马总，facebook的店铺，主要有两种。区别在于用户购买商品的操作流程不同：
  a 跳转至其他网站购买
    用户在商品详情页，点击“到网站看看”，会跳转到我们的电商网站，继而完成购买。
    示例店铺：https://www.facebook.com/commerce/products/2234494946582477/
  b 发消息购买
    用户在商品详情页，只有一个“发消息”按钮，通过与店主交流购买。
    示例店铺：https://www.facebook.com/pg/Grocerys-315662089080426/shop/
    这种店铺，由于是通过发消息（与店主交流）购买，所以是不适合大规模的商品出售的。
    
  从游戏中引流时，第一种的网站比较合适。唯一的问题是，游戏用户需要在电商网站中登陆（拥有账号），才能完成购买过程。
  解决该问题的目前思路是，玩家登陆游戏后，在电商网站后端自动生成登陆账号和密码，并通知玩家，这样玩家就可以使用该账号登陆电商网站了。
  
  店铺需要设置支付信息  
    主要包括：
      税号：州税务登记号码（TIN）
      银行账户：银行汇款线路号码，银行账号，银行所有者姓名
  我创建了一个店铺（https://www.facebook.com/pg/Grocerys-315662089080426/shop/?ref=page_internal）。存在以下的问题：
    a在商品的展示界面看不到购买按钮，没有找到原因，可能是店铺没有填写支付信息造成的（需要美国的税号和银行账户）。
    b在添加商品时，支付方式都是真实货币，这个跟我们用虚拟货币（电商币）结算冲突。

  PS：在店铺右上角，有“逛一逛”按钮，可以导航至我们自己的电商网站。

  创建店铺：
  1)店铺需要设置以下功能
    拥有税号：州税务登记号码（TIN）
    绑定银行账户：银行汇款线路号码，银行账号，银行所有者姓名
    
    
    设置店铺收款（https://www.facebook.com/business/help/1672007083043120?helpref=faq_content）
    facebook收取商品销售税（https://www.facebook.com/business/help/1768310879858675?helpref=faq_content#）
    填写州税务登记号（https://www.facebook.com/business/help/218561232379434?helpref=faq_content#）
    这三个功能，都仅能在美国境内可用
  https://www.facebook.com/business/help/912190892201033

2019/1/30 16:27
1.facebook自己的shop
  Instant Game不允许外链跳转，是否可以跳转到自己的Facebook Shop。
  PS：Facebook也可以在主页上建立自己的Shop，有些类似在微信上开微店那种
2.AWS的MWS服务
  游戏里的商城的东西，有没有办法用亚马逊提供的API（MWS）来获取并完成订单等一系列功能，
  相当于在游戏中完成对亚马逊商品的购买。==》这个我觉得可能性很小，但研究一下

  （优化模板的可以先放一下）
  先弄清楚平台规则

  思路：想办法导流  且中间环节尽可能少 保证转化率



计划
  1.facebook是否支持iframe
  2.不支持iframe时，梳理提供给游戏侧的接口业务
    1）如何通过网页直接访问图片资源



2018/12/4 10:16
1.实现定位功能。1

2018/12/5 10:37
1.实现GroundOverlay。 1
2.使用图片填充多边形的方法。-1

2018/12/10 09:36
1.借鉴高德地图的动画播放方法，实现小汽车在预设轨迹上移动的效果。1
2.实现Google Map缩略至指定缩放等级的功能。1

2018/12/14 10:12
1.解决多边形边界及填充问题。
  
  1)边界问题
    A.部分省份的边界数据里，海岸线侧存在较多小岛，这些小岛数据可以视为冗余数据，需要从边界线数据里剔除。
      解决方法：在原始的kml文件里，这类省份会有多层的数据存放在多个coordinates标签里，对比多个标签里数
      据量的大小，最大的即为不包含小岛数据的边界线数据。
    B.部分省份的海岸边界线的数据量远大于非海岸边界线的数据量，筛选数据后，存在非海岸边界线的数据量远小于
    海岸边界线的数据量，绘制多边形后，出现非海岸边界线的线条多是长线段，与实际边界线差距较大，视觉效果差
    异太明显。
      解决方法：未知。
    C.经过上述两步筛选后的数据，存在此种情况的数据点：
      第一种：相邻的4个点，依次连接得到的三个矢量中，第一个矢量与第三个矢量相交。这种情况会导致多边形内
      有子区域，填充颜色失败。
      解决方法：可以通过保留头尾两个点，舍弃中间两个点的方法解决。
      第二种：相邻的n个点，依次连接得到的多个矢量中，第一个矢量与最后一个矢量相交。这种情况会导致多边形内
      有子区域，填充颜色失败。
      解决方法：可以通过保留前n - 1个点，舍弃最后一个点的方法解决。（可能会接解决问题）
  2)填充问题
    a).google map的API仅支持颜色填充，不支持图片填充。
      解决办法：。
        
2.解决google map导入动画资源的问题。
  游戏中常用的动画资源，包括Unity动画（粒子动画模型动画），和常用的gif动画。
  1)gif动画
    
  2)Unity动画


--------------------------------------------------------------------------
走地百家乐规则
  庄闲都翻开自己的两张牌后：
    闲为8点或9点，或者庄为8点或9点
      结算。
    闲为6或7点
      1.庄为6或7点
        结算。
      2.庄小于6点
        庄家补牌（补牌之后，庄家有3张牌，闲家有2张牌）
          结算。

    闲小于6点：
      闲家补牌（补牌之后，闲家有3张牌，庄家有2张牌）
      然后根据以下情况判断后续的走向：
        1.庄家点数为0，1，2，
          1）庄家补牌
            结算
        2.庄家点数为3
          1）闲家第三张牌为1，2，3，4，5，6，7，9，0时，庄家补牌
            结算
          2）闲家第三张牌为8时
            结算
        3.庄家点数为4
          1）闲家第三张牌为2，3，4，5，6，7，庄家补牌
            结算
          2）闲家第三张牌为1，8，9，0
            结算
        4.庄家点数为5
          1）闲家第三张牌为4，5，6，7，庄家补牌
            结算
          2）闲家第三张牌为1，2，3，8，9，0
            结算
        5.庄家点数为6
          1）闲家第三张牌为6，7，庄家补牌
            结算
          2）闲家第三张牌为1，2，3，4，5，8，9，0
            结算
        6.庄家点数为7
          结算

--------------------------------------------------------------------------
TeamViewer
  1228428515
  k9d17f

node
  6.2.0
  10.13.0

Question
  对从点击游戏入口图标，到正常显示游戏这段时间，详细分析每个阶段所占用的时间，然后对每个阶段做针对性的优化。

开发环境
  FairyGUI：3.10.7
  Layabox：1.8.2



http://52.220.211.57:7001/admin

google play申请应用准备资源
  1.应用名称、简短说明、完整说明；
  2.应用相关的图片资源
    ICON：512*512 32位PNG，禁止使用透明背景
    屏幕截图：JPEG 或 24 位 PNG（无 alpha 透明层）。边长下限：320 像素；边长上限：3840 像素。1-8张
    置顶大图：宽 1024 x 高 500 JPG 或 24 位 PNG（无 alpha 通道）格式
  3.应用类型
    游戏|应用
  4.类别
    如选择游戏，则分为策略、动作、赌场等。
  5.电子邮件
  6.隐私权政策
    一个可用的隐私地址http://...

Farkle Manina admob（https://apps.admob.com/）
  应用 ID:ca-app-pub-1899333947510550~7527513680
  广告类型和展示位置:ca-app-pub-1899333947510550/9426934625

  Google Mobile Ads SDK version 17.0.0



gradlew :BL:dependencies


ERROR_CODE_INTERNAL_ERROR - Something happened internally; for instance, an invalid response was received from the ad server.
ERROR_CODE_INVALID_REQUEST - The ad request was invalid; for instance, the ad unit ID was incorrect.
ERROR_CODE_NETWORK_ERROR - The ad request was unsuccessful due to network connectivity.
ERROR_CODE_NO_FILL - The ad request was successful, but no ad was returned due to lack of ad inventory.


现在缺少的功能：
1.进入APP的下载界面是白屏界面，需要放一张背景图、下载信息。（下载的是APP的更新和FARKLE游戏资源）。
2.自动登录。现在是每次进入APP，都需要重新登录。
3.下载其他游戏资源的过程，没有UI部分的提示。
4.昨天天华给的包，在我的手机上不能正常进入farkle游戏。原因应该还是我的手机版本（Android5.2）支持的是ES5，他给的是ES6，不兼容。这个问题在高版本android手机（Android6.0）上是没有问题的。具体是哪里的代码问题，我下午查一下。

APP大厅的布局显示配置化
  如背景图可以配置：目前可行的方式是通过接口传图片的url过来。

从开发角度来看，h5game与小游戏的区别，主要有两点：
  1.入口文件。
    h5game的入口文件，是一个html文件，小游戏的入口文件，是game.js。
    针对这一点，开发需要做的就是，把html的入口修改为js的入口。
  2.运行环境的差别。
    见https://developers.weixin.qq.com/minigame/dev/guide/best-practice/adapter.html。
    这一部分，对我们的游戏来说，由于我们的游戏没有直接操纵dom，所以可以说是没有区别。
可以先大致了解一下，laya下新建的h5game，与通过laya打包出小游戏的项目，在目录结构上的区别，来理解这个开发上的区别。
再去微信官方平台（https://developers.weixin.qq.com/minigame/dev/guide/）上，熟悉小游戏/小程序的基础知识。


Fb网页版的登录
  有效 OAuth 跳转 URI
    配置域名可以，如https://localhost:10086/。配置IP地址则不行，如https://127.0.0.1:10086/。

Google Adsense
  google有一个专门针对游戏的叫AdSense For Games，简称AFG，我们接的话是接这个。



//DELETE WangBiao

Unity App(2020.4.26)
  1.插件
    1.1 FairyGUI插件
    1.2 UniWebView插件

  2.net communicate
    2.1 https
    2.2 WebSocket

  3.business
    3.1 登录
      3.1.1 平台鉴权认证
      3.1.2 用户登录
        3.1.2.1 FB登录
        3.1.2.2 试玩登录

    3.2 多游戏大厅
      3.2.1 背景图片
        title、headerbg、hallbg可读配置
      3.2.2 玩家信息
      3.2.3 ping
      3.2.4 category entry
      3.2.5 game entry

    3.3 单游戏大厅
      3.3.1 登录之后进入游戏
      3.3.2 从游戏中进入游戏合集页面

  4.接口
    4.1 平台接口
      4.1.1 平台鉴权认证
        http(s)://<server>/api/platform/AccessToken
        用于获取token，不需要plat key。
        （以目前的业务流程来看，应该有更简单的鉴权认证方式，即提供一份鉴权码的方式，省去了token的验证。）
      4.1.2 获取大厅数据
        http(s)://<server>/api/platform/HallData
        用于获取大厅数据，需要plat key。
      4.1.3 获取最新版本信息
        http(s)://<server>/api/platform/LatestVersion
        获取资源的最新版本信息，需要plat key。
    4.2 用户接口
      4.2.1 用户登录
        http(s)://<server>/api/LoginGameAPP
        用户账户登录平台，获取用户信息、用户token、realm、gate等信息，不需要user key。
      4.2.2 获取gate
        接口地址为用户登录获取的realm地址。
        获取用户信息、gate信息等。
      4.2.3 广告金币获取（暂不使用）
        http(s)://<server>/api/AdGold
        用户看完广告后，赠送金币，需要user key。
      4.2.4 更新用户信息（改用websocket接口）
        http(s)://<server>/api/UpdateUserInfo
        客户端将最新的用户信息更新至服务端，需要user key。

  5.流程
    5.1 平台鉴权认证
      获取token
    5.2 获取大厅数据
      背景图片获取，大厅游戏数据。
    5.3 单游戏大厅游戏更新
      单游戏大厅，需要更新主游戏。
    5.4 用户登录
      获取用户信息、用户token、realm地址、gate信息。
      5.4.1 主动登录
        第一次登录或者是登录有效期之外，需要用户主动登录。
      5.4.2 自动登录
        登录有效期之内，自动登录。
        登录有效期，是指客户端存储的token、realm地址有效的时间段。
        登录失败时，需要用户主动登录。
    5.5 用户信息更新
      登录成功之后，需要更新。

    5.6 显示主页面
      根据大厅的单、多游戏类型，显示对应的单/多游戏界面。
    5.7 看广告赠送金币（目前暂不实现，没有该需求）

  6.功能模块
    1.基础功能模块
      通信模块
    2.公共模块
      事件系统、全局异常处理、工具类、多语言、下载模块
    3.平台鉴权
    4.检查更新
    5.登录
    6.单游戏大厅
      主游戏页面、合集页面
    7.多游戏大厅
      合集页面、单个游戏展示页面
    8.返回系统
    UUID  
      oppo：53062e2545e0f5fd0f8a304032dda67c
      xiaomi：06d3e92d1eace09e2323408e316ef648
      Windows: b42bee2db0ac20fc6729fd8b189f4ebc25566dc1


web server error
  _http_outgoing.js:470
      throw new ERR_HTTP_HEADERS_SENT('set');
      ^

  Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client    at ServerResponse.setHeader (_http_outgoing.js:470:11)
      at ServerResponse.header (D:\workspace\BDYX\webgamelobby\node_modules\express\lib\response.js:771:10)
      at ServerResponse.send (D:\workspace\BDYX\webgamelobby\node_modules\express\lib\response.js:170:12)
      at ServerResponse.json (D:\workspace\BDYX\webgamelobby\node_modules\express\lib\response.js:267:15)
      at loginHandle (D:\workspace\BDYX\webgamelobby\src\router\login.js:66:8)
      at D:\workspace\BDYX\webgamelobby\src\router\login.js:29:11
      at D:\workspace\BDYX\webgamelobby\src\logic\server_login.js:72:17
      at IncomingMessage.<anonymous> (D:\workspace\BDYX\webgamelobby\src\net\http_net.js:22:23)
      at IncomingMessage.emit (events.js:187:15)
      at endReadableNT (_stream_readable.js:1094:12)
  npm ERR! code ELIFECYCLE
  npm ERR! errno 1
  npm ERR! webgamelobby@1.0.0 start: `node ./src/app.js`
  npm ERR! Exit status 1
  npm ERR!
  npm ERR! Failed at the webgamelobby@1.0.0 start script.
  npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

  npm ERR! A complete log of this run can be found in:
  npm ERR!     C:\Program Files\nodejs\node_cache\_logs\2020-03-25T08_24_11_232Z-debug.log
//TODO

Unity for lobby
  1.WebView的实现
    小飞机项目，使用的是AssetStore插件UniWebView，这里优先考虑使用该插件。
    目前已知的一些问题：
      a.开发期间的调试
        在开发期间，如何调试WebView上跑的游戏。
        插件提供的方案：支持在mac的Editor上直接调试，android的调试需要打包，在android机器上运行时调试。
        一般Unity的开发期间的调试，都是在Editor上进行，可以很大提高开发调试的效率。
      b.加载本地资源是否正常 完成验证
        需要demo验证。
      c.能否在UniWebView上叠加界面或组件
        即在Unity中实现的组件，叠加到UniWebView上的时候，会不会存在问题。（主要是考虑会不会拦截事件。）
        需要demo验证。
  2.Unity中使用websocket
    可以使用.netcore的ClientWebSocket，编写网络模块。不必从Asset Store 中购买Best HTTP/2。
  3.Unity通过网络下载资源的限制
    使用Unity官方API：UnityWebRequest，未发现该API对下载的资源格式的限制。
  4.Unity里C#与UniWebView通信 
    需要继续研究UniWebView接受Unity消息的方法。
    经验证，可以实现双向通信。
    4.1 C#发消息给UniWebView
      UniWebView.AddJavaScript(jsCodeString, callback);
      jsCodeString，需要执行的js代码；
      callback，js执行结束的回调。
    4.2 UniWebView发消息给C#
      通过URL方式发送消息，即
      window.location.href = 'uniwebview://game-over';
      限制：
          在入口页面加载完所有的资源（js、css等）之前，不能执行语句window.location.href，否则入口页面会跳转至'uniwebview://game-over'，而非发消息给C#。
          URL的长度不能超过16KB。

  5.Unity版本选择
    1)选择LTS版本
      可选版本为2018.4.x、2017.4.x
    2)选择issue较少的版本
      2018.4.8及之前的版本
    3)选择最新的f版本
      2018.4.7f1
    说明：UnityHub默认提供安装的最新版本是2018.4.20f1，也可以使用该版本
  6.google play应用大小限制
    APK大小不超过100M。
    超过100M：
      a.上传apk时，附加两个扩展文件，每个的大小不超过2G。
      b.打包成Android App Bundle，但大小不超过150M。
        Android App Bundle是优化的APK，其中仅包含运行应用所需的代码和资源。
    详细内容见：https://developer.android.com/google/play/expansion-files